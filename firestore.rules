rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Properties collection
    match /properties/{propertyId} {
      allow read: if true; // Public read access
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (resource.data.agentId == request.auth.uid || request.auth.token.admin == true);
    }

    // Viewing requests
    match /viewingRequests/{requestId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.agentId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.agentId == request.auth.uid);
      allow delete: if isAuthenticated() && 
        (resource.data.agentId == request.auth.uid || request.auth.token.admin == true);
    }

    // Search history
    match /searchHistory/{historyId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }

    // Test collection (for connection testing)
    match /test/{docId} {
      allow read, write: if isAuthenticated();
    }
  }
} 