{
  "name": "proptii-website",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "start": "vite",
    "dev": "vite",
    "build": "vite build && npm run validate-build",
    "preview": "vite preview",
    "typecheck": "tsc --noEmit",
    "lint": "eslint .",
    "clean": "rm -rf node_modules/.vite dist",
    "start:dev": "npm run clean && concurrently \"npm run dev\" \"cd proptii-backend && npm run start:dev\"",
    "start:backend": "cd proptii-backend && npm run start:dev",
    "start:frontend": "npm run dev",
    "validate-build": "node scripts/validate-build.js",
    "verify-resources": "node scripts/verify-resources.js",
    "verify-github": "node scripts/verify-github-integration.js",
    "verify-build-process": "node scripts/verify-build-process.js",
    "build:staging": "vite build --mode staging",
    "preview:staging": "vite preview --mode staging",
    "validate:staging": "node scripts/validate-staging-env.js",
    "deploy:staging": "npm run validate:staging && npm run build:staging && az staticwebapp deploy --source dist",
    "test:e2e:staging": "cypress run --config baseUrl=$STAGING_URL",
    "lint:staging": "eslint . --max-warnings 0",
    "typecheck:staging": "tsc --noEmit",
    "validate:feature-flags": "node scripts/validate-feature-flags.js",
    "verify:staging": "npm run lint:staging && npm run typecheck:staging && npm run validate:staging && npm run validate:feature-flags",
    "staging:full": "npm run verify:staging && npm run build:staging && npm run deploy:staging",
    "monitor:staging": "node scripts/monitor-staging.js",
    "monitor:staging:watch": "node scripts/monitor-staging.js --watch",
    "alerts:staging": "node scripts/monitor-staging.js --alerts-only",
    "validate:staging:full": "npm run validate:staging && npm run monitor:staging",
    "build:production": "vite build --mode production",
    "preview:production": "vite preview --mode production",
    "validate:production": "node scripts/validate-production-env.js",
    "deploy:production": "npm run validate:production && npm run build:production && az staticwebapp deploy --source dist --env production",
    "verify:production": "npm run lint && npm run typecheck && npm run validate:production && npm run validate:feature-flags",
    "production:full": "npm run verify:production && npm run build:production && npm run deploy:production",
    "cdn:configure": "node scripts/configure-cdn.js",
    "cdn:purge": "az cdn endpoint purge --content-paths \"/*\" --profile-name $CDN_PROFILE_NAME --name $CDN_ENDPOINT_NAME --resource-group $RESOURCE_GROUP_NAME",
    "production:deploy:full": "npm run verify:production && npm run build:production && npm run deploy:production && npm run cdn:configure && npm run cdn:purge",
    "configure:waf": "node scripts/configure-waf.js",
    "configure:security": "npm run configure:cdn && npm run configure:waf",
    "test": "vitest",
    "test:watch": "vitest watch",
    "test:coverage": "ts-node scripts/generate-coverage.ts",
    "test:coverage:view": "open coverage/reports/index.html",
    "test:ui": "vitest --ui",
    "configure:cdn": "npm run validate:cdn-env && node scripts/configure-cdn.js",
    "configure:cdn-security": "npm run validate:cdn-env && node scripts/configure-cdn-security.js",
    "configure:cdn-ssl": "npm run validate:cdn-env && node scripts/configure-cdn-ssl.js",
    "configure:cdn-endpoint": "npm run validate:cdn-env && node scripts/configure-cdn-endpoint.js",
    "configure:cdn-caching": "npm run validate:cdn-env && node scripts/configure-cdn-caching.js",
    "configure:cdn-assets": "node scripts/configure-cdn-assets.js",
    "monitor:cdn": "node scripts/monitor-cdn-health.js",
    "verify:cdn": "node scripts/verify-cdn-setup.js",
    "optimize:images": "node scripts/optimize-images.js",
    "optimize:fonts": "node scripts/optimize-fonts.js",
    "optimize:assets": "npm run optimize:images && npm run optimize:fonts",
    "optimize:audio": "node scripts/optimize-audio.js",
    "optimize:media": "npm run optimize:audio && npm run optimize:videos",
    "optimize:videos": "node scripts/optimize-videos.js",
    "migrate:configs": "node scripts/migrate-configs.js",
    "migrate:all": "npm run migrate:configs && npm run optimize:assets && npm run optimize:media",
    "validate:cdn-env": "node scripts/validate-cdn-env.js",
    "configure:cdn-optimization": "node scripts/configure-cdn-optimization.js",
    "configure:cdn-ssl-verify": "node scripts/configure-cdn-ssl-verify.js",
    "configure:cdn-security-rules": "node scripts/configure-cdn-security-rules.js",
    "validate:cdn-rules": "node scripts/validate-cdn-rules.js",
    "configure:cdn-all": "npm run validate:cdn-env && npm run configure:cdn && npm run configure:cdn-security && npm run configure:cdn-ssl && npm run configure:cdn-endpoint && npm run configure:cdn-caching && npm run configure:cdn-optimization && npm run configure:cdn-security-rules && npm run validate:cdn-rules",
    "monitor:web-vitals": "node scripts/monitor-web-vitals.js",
    "monitor:custom-metrics": "node scripts/monitor-custom-metrics.js",
    "monitor:all": "npm run monitor:web-vitals && npm run monitor:custom-metrics && npm run monitor:cdn",
    "test:integration": "node scripts/integration-test.js",
    "test:load": "node scripts/load-test.js",
    "test:edge": "node scripts/edge-test.js",
    "test:docs": "node scripts/generate-test-documentation.js",
    "test:all": "npm run test:integration && npm run test:load && npm run test:edge && npm run test:docs"
  },
  "dependencies": {
    "@azure/arm-cdn": "^7.0.0",
    "@azure/arm-frontdoor": "^5.0.0",
    "@azure/identity": "^4.9.1",
    "@azure/monitor-opentelemetry": "^1.2.0",
    "@azure/msal-browser": "^4.11.0",
    "@azure/msal-react": "^3.0.10",
    "@date-io/date-fns": "^3.2.1",
    "@emotion/react": "^11.11.3",
    "@emotion/styled": "^11.11.0",
    "@fortawesome/fontawesome-svg-core": "^6.5.1",
    "@fortawesome/free-brands-svg-icons": "^6.5.1",
    "@fortawesome/free-regular-svg-icons": "^6.5.1",
    "@fortawesome/free-solid-svg-icons": "^6.5.1",
    "@fortawesome/react-fontawesome": "^0.2.0",
    "@google-cloud/local-auth": "^3.0.1",
    "@hookform/resolvers": "^3.3.4",
    "@microsoft/applicationinsights-web": "^3.3.6",
    "@mui/icons-material": "^5.15.10",
    "@mui/material": "^5.15.10",
    "@mui/x-date-pickers": "^6.19.4",
    "@sentry/react": "^9.17.0",
    "applicationinsights": "^1.8.10",
    "axios": "^1.6.7",
    "chalk": "^4.1.2",
    "cors": "^2.8.5",
    "date-fns": "^3.3.1",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "express-async-handler": "^1.2.0",
    "glob": "^10.3.10",
    "googleapis": "^149.0.0",
    "jszip": "^3.10.1",
    "lucide-react": "^0.330.0",
    "multer": "^1.4.5-lts.2",
    "nodemailer": "^7.0.3",
    "pdfjs-dist": "^4.0.379",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.50.1",
    "react-router-dom": "^6.22.1",
    "recharts": "^2.12.0",
    "swiper": "^11.0.6",
    "web-vitals": "^3.5.2",
    "yup": "^1.6.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@azure/arm-appservice": "^16.0.0",
    "@azure/arm-resources": "^6.0.0",
    "@octokit/rest": "^21.1.1",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/react": "^18.2.55",
    "@types/react-dom": "^18.2.19",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "^7.0.1",
    "@vitejs/plugin-react": "^4.2.1",
    "@vitest/coverage-v8": "^1.2.2",
    "@vitest/ui": "^1.2.2",
    "autoprefixer": "^10.4.17",
    "concurrently": "^8.2.2",
    "eslint": "^8.56.0",
    "jsdom": "^24.0.0",
    "postcss": "^8.4.35",
    "sharp": "^0.33.2",
    "tailwindcss": "^3.4.1",
    "terser": "^5.27.0",
    "typescript": "^5.3.3",
    "vite": "^6.3.5",
    "vitest": "^3.1.3"
  }
}
